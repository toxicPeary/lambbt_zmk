/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include "zmk-helpers/helper.h"
#include "combos.dtsi"  // requires layer aliases
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

//                KEY POSITIONS
// ╭──────────────╮ ╭──────────────╮
// │ 0  1  2  3  4│ │ 5  6  7  8  9│
// │10 11 12 13 14│ │15 16 17 18 19│
// │20 21 22 23 24│ │25 26 27 28 29│
// ╰─────╮30 31 32│ │33 34 35╭─────╯
//       ╰────────╯ ╰────────╯

#define QUICK_TAP_MS 175
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24   // left hand
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29   // right hand
#define THUMBS 30 31 32 33 34 35                         // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs
&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        swap: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            timeout-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        zero_layer {
            bindings = <
&kp DE_Q     &kp DE_W     &kp DE_F          &kp DE_P      &kp DE_B   &kp DE_J  &kp DE_L      &td DE_U_UMLAUT DE_U  &kp DE_Y             &td DE_PIPE DE_FSLH
&hml LGUI A  &hml LALT R  &hml LSHFT S      &hml LCTRL T  &kp DE_G   &kp DE_M  &hmr LCTRL N  &hmr RSHFT E          &hmr LALT I          &hmr LGUI O
&kp DE_Z     &kp DE_X     &kp DE_C          &kp DE_D      &kp DE_V   &kp DE_K  &kp DE_H      &td DE_SEMI DE_COMMA  &td DE_COLON DE_DOT  &td DE_AMPS DE_MINUS
                          &sk LEFT_CONTROL  &kp SPACE     &sk LSHFT  &kp RET   &none         &td DE_EXCL DE_QMARK
            >;
        };
    };
};
