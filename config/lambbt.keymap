#include "keys_de.h"
#include "zmk-helpers/helper.h"
#include "combos.dtsi"  // requires layer aliases
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

//                KEY POSITIONS
// ╭──────────────╮ ╭──────────────╮
// │ 0  1  2  3  4│ │ 5  6  7  8  9│
// │10 11 12 13 14│ │15 16 17 18 19│
// │20 21 22 23 24│ │25 26 27 28 29│
// ╰─────╮30 31 32│ │33 34 35╭─────╯
//       ╰────────╯ ╰────────╯

#define QUICK_TAP_MS 175
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24   // left hand
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29   // right hand
#define THUMBS 30 31 32 33 34 35                         // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

MAKE_HRM(hml, &kp, &kp, KEYS_R)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L)  // right-hand HRMs
MAKE_HRM(tt, &to, &kp, THUMBS) //thumb 


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        swap: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            timeout-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home {
            // layer 

            bindings = <
&kp DE_Q        &kp DE_W        &kp DE_F         &kp DE_P         &kp DE_B  &kp DE_J  &kp DE_L         &td DE_U_UMLAUT DE_U  &kp DE_Y             &td DE_PIPE DE_FSLH
&hml LGUI DE_A  &hml LALT DE_R  &hml LSHFT DE_S  &hml LCTRL DE_T  &kp DE_G  &kp DE_M  &hmr LCTRL DE_N  &hmr RSHFT DE_E       &hmr LALT DE_I       &hmr LGUI DE_O
&kp DE_Z        &kp DE_X        &kp DE_C         &kp DE_D         &kp DE_V  &kp DE_K  &kp DE_H         &td DE_SEMI DE_COMMA  &td DE_COLON DE_DOT  &td DE_AMPS DE_MINUS
                                &kp ESC          &kp SPACE        &kp TAB   &kp RET   &tt 1 BACKSPACE    &kp DEL
            >;
        };

        symbols {
            // layer 1

            bindings = <
&kp ESC       &kp DE_AT     &kp DE_HASH   &kp DE_DLLR   &kp DE_PRCNT  &kp DE_CARET  &kp DE_AMPS  &kp DE_STAR  &kp DE_SEMI  &none
&kp TAB       &kp DE_EQUAL  &kp DE_ACUTE  &kp DE_GRAVE  &kp DE_SQT    &kp DE_BSLH   &kp DE_LBRC  &kp DE_RBRC  &kp DE_PIPE  &none
&kp DE_TILDE  &none         &none         &none         &kp DE_DQT    &kp DE_LBKT   &kp DE_LPAR  &kp DE_RPAR  &kp DE_RBKT  &to 4
                            &none         &to 0         &sk LSHIFT    &kp RET       &to 3        &none
            >;
        };

        mouse {
            // layer 2

            bindings = <
&swap                &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none                 &none    &kp LA(LEFT)  &kp LC(LS(TAB))  &kp RC(TAB)     &kp LA(RIGHT)
&kp F1               &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp DEL               &none    &kp LEFT      &kp DOWN         &kp UP          &kp RIGHT
&td LG(GRAVE) GRAVE  &kp PG_DN       &kp LC(DE_C)    &kp LC(DE_V)     &none                 &none    &mkp LCLK     &mkp RCLK        &msc SCRL_DOWN  &msc SCRL_UP
                                     &none           &to 0            &kp LS(LEFT_CONTROL)  &kp RET  &to 1         &none
            >;
        };

        numbers {
            // layer 3

            bindings = <
&kp ESC  &kp C_PP     &kp C_PREV    &kp C_NEXT    &kp DE_UNDERSCORE  &kp DE_MINUS  &kp N7  &kp N8  &kp N9  &none
&kp TAB  &none        &kp C_VOL_DN  &kp C_VOL_UP  &kp DE_PLUS        &kp DE_EQUAL  &kp N4  &kp N5  &kp N6  &none
&none    &kp DE_STAR  &kp C_BRI_DN  &kp C_BRI_UP  &kp DOT            &kp N0        &kp N1  &kp N2  &kp N3  &to 5
                      &none         &to 0         &sk LGUI           &kp RET       &to 1   &none
            >;
        };

        bluetooth {
            // layer 4

            bindings = <
&none  &none  &none  &none  &none       &none         &none         &none         &none         &none
&none  &none  &none  &none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none       &none         &none         &none         &none         &none
              &none  &to 0  &none       &none         &to 1         &none
            >;
        };

        fifth_layer {
            // layer 

            display-name = "Gaming";
            bindings = <
&kp ESC    &kp Q     &kp W     &kp E  &kp R      &kp T    &kp DE_Z  &kp U  &kp I  &kp O
&kp LSHFT  &kp A     &kp S     &kp D  &kp F      &kp G    &kp H     &kp J  &kp K  &kp L
&kp LCTRL  &kp DE_Y  &kp X     &kp C  &kp V      &kp B    &kp N     &kp M  &none  &none
                     &kp LALT  &kp C  &kp SPACE  &kp RET  &swap     &none
            >;
        };
    };
};
